spring:
  application.name: authorization-server
  security:
    user:
      name: user
      password: password
    oauth2:
      client:
        registration:
#          google:
#            provider: google
#            client-id: ${google-id}
#            client-secret: ${google-secret}
#            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
#            client-name: google-client
          github:
            provider: github
            clientId: ${github-id}
            clientSecret: ${github-secret}
            scope: user:email, read:user
            client-name: github-client
        provider:
#          google.user-name-attribute: email
          github.user-name-attribute: login
      authorizationserver:
        client:
          oidc-client:
            registration:
              client-id: "oidc-client"
              client-secret: "{noop}secret"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "https://oauthdebugger.com/debug"
#              post-logout-redirect-uris:
#                - "http://127.0.0.1:8080/"
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: true

server:
  port: 8080